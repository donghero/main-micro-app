该提供的数据：
节点信息。
用户信息。
主题自身属性（分合并作品属性后展品的属性，原生作品属性，因为展品那里进行定制化配置，也是一个可以收费的点）。
   这里就存在问题点
    1 需要根据授权的信息，来给属性，是平台控制过滤属性，还是主题自身控制拿对应的属性，
      由主题自身控制可以进行预览。
    2 主题如何知道自身的授权信息，因为主题需要根据授权信息来判断能够支持定制。
主题插件自身合约信息（从上面引出来的）
展品列表（包含了组合）

单个展品信息（包含了组合类的展品）
插件自身属性（同第3点，也需要根据授权信息，来控制获取属性进行渲染）。 
主题插件依赖信息。（同第3点，也需要根据授权信息，来选择不同的依赖，这里可以结合属性信息，进行动态加载依赖）。


组合信息
组合单品列表
单品信息（可以包含依赖）
单品依赖 (纯粹的依赖)

实现方式：
1.节点信息接口（无网络请求判断）
2.用户信息接口（有网络请求判断）
3.主题自身属性、自身依赖 统一接口（无网络请求判断） 
4.展品列表接口、可加载依赖信息、属性信息（有网络请求判断）
5.单个展品信息接口（有网络请求判断）
6.展品自身属性接口（有网络请求判断）
7.插件依赖接口（有网络请求判断） 运行时判断展品还是作品还是
8.主题插件自身信息接口（有网络请求判断）






数据API：
1.节点信息。   场景举例：展示自身节点配置信息
2.用户信息。   场景举例：展示用户信息
3.主题自身属性（分合并作品属性后展品的属性，原生作品属性，因为展品那里进行定制化配置，也是一个可以收费的点）。
    场景举例：主题定制化
        3.1 需要根据授权的信息，来给属性，是平台控制过滤属性，还是主题自身控制拿对应的属性，
             由主题自身控制可以进行预览。
        3.2 主题如何知道自身的授权信息，因为主题需要根据授权信息来判断能够支持定制。
4.主题插件自身合约信息（从上面引出来的）  场景举例：主题定制化收费判断
5.主题自身依赖列表    场景举例：使用依赖的作品，例如插件
6.主题依赖的作品信息   场景举例：使用依赖的作品，例如插件
7.展品列表（包含组合，包含依赖信息，应当包含授权状态）  场景举例：展示展品列表
8.单个展品信息（包含依赖信息，包含组合类的展品 ，应当包含授权状态）  场景举例：展品详情页
9.展品文件     场景举例：渲染展品内容
10.展品依赖树里的作品信息      场景举例：展示获得当前展品授权后可获得多个依赖作品的授权
11.展品依赖的作品文件   场景举例：渲染依赖内容
12.插件自身属性（同第3点，也需要根据自身授权信息，来控制获取属性进行渲染）。  场景举例：插件定制化
13.插件依赖信息。（依赖的作品文件通过11获取，同第3点，也需要根据授权信息，来选择不同的依赖，这里可以结合属性信息，进行定制化加载依赖）。
               场景举例：使用依赖的作品，例如插件
                12与13： 授权方面 分展品插件 与 作品插件，如果是展品插件 那要用户侧合约，如果是作品插件，那要节点侧合约
14.组合的单品列表（应该包含依赖信息，目前接口没有，应当包含授权状态）     场景举例：展示组合单品
15.组合的单品详情（包含依赖信息，应当包含授权状态）     场景举例：单品详情页
16.单品文件        场景举例：展示单品
17.单品依赖的作品文件        场景举例：渲染依赖内容


登录与插件加载API：
 1.登录呼出                          场景举例：用户登录
 2.登录监听                          场景举例：一个插件呼出登录，另一个插件也需要知道登录了。
 3.用户切换监听                   场景举例：目前多节点共享登录用户，
                                                            如果浏览器同时访问两个节点，一个节点登出或登录了，另一个节点会带用户信息请求，所以需要在dom聚焦时检查是否用户切换了。
 4.登出呼出，登出后自动刷新整个页面                         场景举例：用户退出登录
 5.加载插件（区分是哪个展品、或展品下的依赖、或依赖的依赖，或组合下的单品 ）  （目前是两个api加载展品或作品api）        
       5.1 如何用一个api进行加载？
             参数：
                    展品插件： 展品id，
                    展品依赖树里的插件：展品id,, 依赖nid
                    单品插件： 展品id , 单品id,  
                    单品依赖树里的插件： 展品id, 单品id, 单品依赖的nid 
            方法设计：
                    mountWidget(a, b，c)
                    如果b为null或者b为object:   mountWidget(展品ID, {depNid: 依赖nid}) 也就是加载展品或展品的依赖
                    如果b是字符串而不是object:  mountWidget(展品ID, 单品id，{depNid: 依赖nid})  也就是加载单品或单品的依赖
                  
      
