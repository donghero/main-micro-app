/**
 * 通信情况：
 * 1.运行时主体与各插件之间：
 *   通讯方式：
 *      1.1 全局
 *      1.2 针对某个某些（或某类）插件
 * 2.父插件与子孙插件之间
 *   通讯方式：
 *      2.1 全局可监听
 *      2.2 针对某个某些（或某类）插件
 *          2.2.1 直接调用插件的方法
 *          2.2.2 插件直接调用父插件的方法
 * 3.插件与插件之间
 *   通讯方式：
 *      3.1 共同上级插件做中间方
 *      
 * 总结：
 *   1. 运行时提供全局状态与监听事件
 *   2. 父插件提供全局状态与监听事件（即运行时赋予插件能够监听父插件的通过运行时方法提供全局状态的能力）
 *   3. 父插件针对某个自己知道的插件提供状态与监听事件（即运行时赋予父插件与子插件直接通讯的能力）  
 * 方案：
 *    1.freelogApp下提供运行时级别的全局状态与监听
 *    2.freelogApp下提供主题级别的全局状态定义改变和监听 
 *    3.注册插件时注入父插件给子孙插件数据（例如某个方法，通过这个方法子插件可以与父插件通讯）
 *    4.注册插件后返回app对象时提供访问子插件提供的方法（例如子插件通过运行时提供的注册方法注册了数据，该数据可以由父插件获取）
 */
 export function dev():any{ 
     
}
